name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Debug build environment
        run: |
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Current directory: $(pwd)"
          echo "Files in current directory:"
          ls -la
          echo "Package.json contents:"
          cat package.json
      
      - name: Build with Astro
        run: npm run build
        
      - name: Verify build output
        run: |
          echo "Build completed. Checking dist folder:"
          ls -la dist/ || echo "No dist folder found"
          ls -la dist/assets/ || echo "No assets folder found"
          find dist -name "*.css" -exec echo "CSS file found: {}" \; || echo "No CSS files found"
          find dist -name "*.html" -exec echo "HTML file found: {}" \; || echo "No HTML files found"
          echo "Checking HTML content for CSS references:"
          find dist -name "*.html" -exec grep -l "stylesheet" {} \; || echo "No stylesheet links found"
          find dist -name "*.html" -exec head -5 {} \; || echo "No HTML files to check"

      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/

  # Deploy job
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Test deployed site
        run: |
          echo "Testing deployed site accessibility..."
          echo "Site URL: ${{ steps.deployment.outputs.page_url }}"
          sleep 10  # Wait for deployment to propagate
          curl -I "${{ steps.deployment.outputs.page_url }}" || echo "Main page not accessible"
          curl -I "${{ steps.deployment.outputs.page_url }}assets/" || echo "Assets folder not accessible"